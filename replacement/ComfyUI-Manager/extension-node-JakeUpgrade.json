{
    "https://www.unrealengine.com/marketplace/en-US/product/mars-master-material": [
        [
            "CR SD1.5 Aspect Ratio JK",
			"CR SDXL Aspect Ratio JK",
			"Reroute List JK",
			"Reroute Ckpt JK",
			"Reroute Vae JK",
			"Reroute Sampler JK",
			"Reroute Upscale JK",
			"Reroute Resize JK",
			"CR Apply ControlNet JK",
			"CR Multi-ControlNet Stack JK",
			"CR Apply Multi-ControlNet JK",
			"CR Load LoRA JK",
			"CR LoRA Stack JK",
			"Embedding Picker JK",
			"Embedding Picker Multi JK",
			"Ckpt Loader JK",
			"Vae Loader JK",
			"Sampler Loader JK",
			"Upscale Model Loader JK",
			"NodesState JK",
			"Ksampler Parameters JK",
			"Project Setting JK",
			"Base Model Parameters JK",
			"Base Model Parameters Extract JK",
			"Base Image Parameters Extract JK",
			"Base Model Pipe JK",
			"Base Model Pipe Extract JK",
			"Refine Pipe JK",
			"Refine Pipe Extract JK",
			"Noise Injection Parameters JK",
			"Refine Model Parameters JK",
			"Refine 1 Parameters Extract JK",
			"Refine 2 Parameters Extract JK",
			"Upscale Model Parameters JK",
			"Image Upscale Parameters Extract JK",
			"Latent Upscale Parameters Extract JK",
			"Upscale Model Parameters Extract JK",
			"Detailer Parameters JK",
			"Pipe End JK",
			"Save Image with Metadata JK",
			"Save Image with Metadata Flow JK",
			"Load Image With Metadata JK",
			"HintImageEnchance JK",
			"Animation Prompt JK",
			"Animation Value JK",
			"CR Boolean JK",
			"CR Int Input Switch JK",
			"CR Float Input Switch JK",
			"CR Image Input Switch JK",
			"CR Mask Input Switch JK",
			"CR Latent Input Switch JK",
			"CR Conditioning Input Switch JK",
			"CR Clip Input Switch JK",
			"CR Model Input Switch JK",
			"CR ControlNet Input Switch JK",
			"CR Text Input Switch JK",
			"CR VAE Input Switch JK",
			"CR Switch Model and CLIP JK",
			"CR Pipe Input Switch JK",
			"CR Impact Pipe Input Switch JK",
			"CM_BoolToInt JK",
			"CM_IntToBool JK",
			"CM_BoolUnaryOperation JK",
			"CM_BoolBinaryOperation JK",
			"CM_FloatUnaryCondition JK",
			"CM_FloatBinaryCondition JK",
			"CM_IntUnaryCondition JK",
			"CM_IntBinaryCondition JK",
			"CM_NumberUnaryCondition JK",
			"CM_NumberBinaryCondition JK",
			"CM_Vec2UnaryCondition JK",
			"CM_Vec2BinaryCondition JK",
			"CM_Vec2ToFloatUnaryOperation JK",
			"CM_Vec2ToFloatBinaryOperation JK",
			"CM_Vec2FloatOperation_JK",
			"CM_Vec3UnaryCondition JK",
			"CM_Vec3BinaryCondition JK",
			"CM_Vec3ToFloatUnaryOperation JK",
			"CM_Vec3ToFloatBinaryOperation JK",
			"CM_Vec3FloatOperation_JK",
			"CM_Vec4UnaryCondition JK",
			"CM_Vec4BinaryCondition JK",
			"CM_Vec4ToFloatUnaryOperation JK",
			"CM_Vec4ToFloatBinaryOperation JK",
			"CM_Vec4FloatOperation_JK",
			"CM_FloatToInt JK",
			"CM_IntToFloat JK",
			"CM_IntToNumber JK",
			"CM_NumberToInt JK",
			"CM_FloatToNumber JK",
			"CM_NumberToFloat JK",
			"CM_ComposeVec2 JK",
			"CM_ComposeVec3 JK",
			"CM_ComposeVec4 JK",
			"CM_BreakoutVec2 JK",
			"CM_BreakoutVec3 JK",
			"CM_BreakoutVec4 JK",
			"CM_FloatUnaryOperation JK",
			"CM_FloatBinaryOperation JK",
			"CM_IntUnaryOperation JK",
			"CM_IntBinaryOperation JK",
			"CM_NumberUnaryOperation JK",
			"CM_NumberBinaryOperation JK",
			"CM_Vec2UnaryOperation JK",
			"CM_Vec2BinaryOperation JK",
			"CM_Vec3UnaryOperation JK",
			"CM_Vec3BinaryOperation JK",
			"CM_Vec4UnaryOperation JK",
			"CM_Vec4BinaryOperation JK",
			"Evaluate Ints JK",
			"Evaluate Floats JK",
			"Evaluate Strings JK",
			"Evaluate Examples JK"
        ],
        {
            "author": "Jake.Chaikefu",
            "description": "ComfyUI-JakeUpgrade is a custom node created by Jake Chaikefu.",
            "nickname": "JKüêâ",
            "title": "ComfyUI-JakeUpgrade",
			"title_aux": "Jake Upgrade"
        }
    ],
	"https://github.com/pythongosssss/ComfyUI-Custom-Scripts": [
        [
            "CheckpointLoader|pysssss",
            "ConstrainImageforVideo|pysssss",
            "ConstrainImage|pysssss",
            "LoadText|pysssss",
            "LoraLoader|pysssss",
            "MathExpression|pysssss",
            "PresetText|pysssss",
            "PlaySound|pysssss",
            "Repeater|pysssss",
            "ReroutePrimitive|pysssss",
            "SaveText|pysssss",
            "ShowText|pysssss",
            "StringFunction|pysssss"
        ],
        {
            "title_aux": "pythongosssss/ComfyUI-Custom-Scripts"
        }
    ],
	"https://github.com/szhublox/ambw_comfyui": [
        [
            "Auto Merge Block Weighted"
        ],
        {
            "title_aux": "Auto-MBW"
        }
    ],
	"https://github.com/wolfden/ComfyUi_PromptStylers": [
        [
            "SDXLPromptStylerAll",
			"SDXLPromptStylerbyArtist",
			"SDXLPromptStylerbyCamera",
			"SDXLPromptbyCelticArt",
			"SDXLPromptStylerbyComposition",
			"SDXLPromptbyContemporaryNordicArt",
			"SDXLPromptStylerbyCyberpunkSurrealism",
			"SDXLPromptStylerbyDepth",
			"SDXLPromptStylerbyEnvironment",
            "SDXLPromptStylerbyFantasySetting",
			"SDXLPromptbyFashionArt",
			"SDXLPromptStylerbyFilter",
			"SDXLPromptStylerbyFocus",
			"SDXLPromptbyGothicRevival",
            "SDXLPromptStylerHorror",
			"SDXLPromptStylerbyImpressionism",
			"SDXLPromptbyIrishFolkArt",
			"SDXLPromptStylerbyLighting",
            "SDXLPromptStylerbyMileHigh",
            "SDXLPromptStylerMisc",
            "SDXLPromptStylerbyMood",
            "SDXLPromptStylerbyMythicalCreature",
            "SDXLPromptStylerbyOriginal",
            "SDXLPromptStylerbyQuantumRealism",
			"SDXLPromptbyRomanticNationalismArt",
            "SDXLPromptbySportsArt",
            "SDXLPromptStylerbySteamPunkRealism",
            "SDXLPromptbyStreetArt",
            "SDXLPromptStylerbySubject",
            "SDXLPromptStylerbySurrealism",
            "SDXLPromptStylerbyTheme",
            "SDXLPromptStylerbyTimeofDay",
            "SDXLPromptbyVikingArt",
            "SDXLPromptbyWildlifeArt",
            "SDXLPromptStylerbyWyvern",
            "SDXLPromptStylerbyFooocus",
            "SDXLPromptStylerbyDiva",
            "SDXLPromptStylerbyMre",
            "SDXLPromptStylerbyMarc",
            "SDXLPromptStylerbySai",
            "SDXLPromptStylerbyTwri"
        ],
        {
            "title_aux": "SDXL Prompt Styler (customized version by wolfden)"
        }
    ],
}